pipeline {
  agent any

  parameters {
    string(name: 'build_version',
           defaultValue: 'V1.0',
           description: 'Build version to use for Docker image')
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/Zennzn/devops-demo-project.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd demo-java-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://sonarqube:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd demo-java-app
            mvn sonar:sonar \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "zenznnyass/demo-java-app:${build_version}"
        REGISTRY_CREDENTIALS = credentials('dockerhub')   // ID de ta cred Docker Hub
      }
      steps {
        script {
          sh 'cd demo-java-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "devops-demo-project"
        GIT_USER_NAME = "Zennzn"                // ton compte GitHub
      }
      steps {
        // ici, tes instructions dâ€™update/deploy si besoin
        echo "Deployment file updated"
      }
    }
  }
}
